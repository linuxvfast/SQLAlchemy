from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Integer,String,Column,ForeignKey
from sqlalchemy.orm import relationship,sessionmaker

engine = create_engine("mysql+pymysql://root:123456@192.168.10.22/code",encoding='utf-8',echo=True)
base = declarative_base()

class Customer(base):
    __tablename__ = 'customer'
    id = Column(Integer,primary_key=True)
    name = Column(String(32))

    #foreignkey bind
    bind_address_id = Column(Integer,ForeignKey('address.id'))
    shipp_address_id = Column(Integer,ForeignKey('address.id'))

    #Reverse bound to find（反向绑定查找）
    bind_address = relationship('Address',foreign_keys=[bind_address_id])
    shipp_address = relationship('Address',foreign_keys=[shipp_address_id])

    def __repr__(self):
        return "<id='%s',name='%s'>"%(self.id,self.name)

class Address(base):
    __tablename__ = 'address'
    id = Column(Integer,primary_key=True)
    street = Column(String(64))
    city = Column(String(64))
    state = Column(String(64))

    def __repr__(self):
        return "<id='%s',street='%s',city='%s',state='%s'>"%(self.id,self.street,self.city,self.state)

base.metadata.create_all(engine)




