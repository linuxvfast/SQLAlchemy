import sqlalchemy
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column,Integer,String


#连接数据库
engine = create_engine("mysql+pymysql://root:123456@192.168.10.22/code",encoding='utf-8',echo=True)  #echo=True会打印所有的信息
#创建基类
base = declarative_base()

#创建表的类
class User(base):
    __tablename__ = 'user' #定义表名
    id = Column(Integer,primary_key=True) #primary_key指定主键
    name = Column(String(32))
    password = Column(String(64))

base.metadata.create_all(engine) #创建表结构




除上面的创建之外，还有一种创建表的方式，虽不常用，但还是看看吧

from sqlalchemy import Table, MetaData, Column, Integer, String, ForeignKey
from sqlalchemy.orm import mapper
 
metadata = MetaData()
 
user = Table('user', metadata,
            Column('id', Integer, primary_key=True),
            Column('name', String(50)),
            Column('fullname', String(50)),
            Column('password', String(12))
        )
 
class User(object):
    def __init__(self, name, fullname, password):
        self.name = name
        self.fullname = fullname
        self.password = password
 
mapper(User, user) #the table metadata is created separately with the Table construct, then associated with the User class via the mapper() function
